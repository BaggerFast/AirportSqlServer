-------------------------------------------------------------------------------------------------
-- VIEWS_STRUCTURE
-------------------------------------------------------------------------------------------------
SET NOCOUNT ON;
SET ANSI_NULLS ON;
SET QUOTED_IDENTIFIER ON;
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;

DECLARE @IS_COMMIT BIT = 0;
-------------------------------------------------------------------------------------------------
USE VideoHosting;

BEGIN TRAN
PRINT N'➕ JOB IS STARTED';

IF EXISTS (SELECT * FROM [sys].[tables] WHERE [name] = N'VIEWS') BEGIN
	PRINT N'❌ TABLE [VIEWS] IS ALREADY EXISTS';
END ELSE BEGIN
	PRINT N'➕ TABLE [VIEWS] IS NOT EXISTS AND WILL BE CREATED';
    CREATE TABLE [VIEWS] (
		[UID] UNIQUEIDENTIFIER NOT NULL,
        [USER_UID] UNIQUEIDENTIFIER NOT NULL, 
        [VIDEO_UID] UNIQUEIDENTIFIER NOT NULL,
        [CREATED_DT] DATETIME NOT NULL,
	);
    PRINT N'➕ TABLE [VIEWS] WAS CREATED';
END;

-- PRIMARY KEY
IF NOT EXISTS (SELECT 1 FROM [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS] WHERE [CONSTRAINT_TYPE] = 'PRIMARY KEY' AND [TABLE_NAME] = N'VIEWS') BEGIN
    ALTER TABLE [dbo].[VIEWS] ADD CONSTRAINT [PK_VIEWS_UID] PRIMARY KEY CLUSTERED ([UID] ASC)
        PRINT N'➕ PRIMARY KEY [PK_VIEWS_UID] WAS CREATED';
END;

-- FOREIGN KEY
IF NOT EXISTS (SELECT 1 FROM [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS] WHERE [CONSTRAINT_NAME] = 'FK_VIEWS_USER_UID') BEGIN
	ALTER TABLE [VIEWS] ADD CONSTRAINT [FK_VIEWS_USER_UID] 
        FOREIGN KEY([USER_UID]) REFERENCES [USERS] ([UID]);
	PRINT N'➕ FOREIGN KEY [FK_VIEWS_USER_UID] WAS CREATED';
END;
IF NOT EXISTS (SELECT 1 FROM [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS] WHERE [CONSTRAINT_NAME] = 'FK_VIEWS_VIDEO_UID') BEGIN
	ALTER TABLE [VIEWS] ADD CONSTRAINT [FK_VIEWS_VIDEO_UID] 
		FOREIGN KEY([VIDEO_UID]) REFERENCES [VIDEOS] ([UID]);
	PRINT N'➕ FOREIGN KEY [FK_VIEWS_VIDEO_UID] WAS CREATED';
END;

-- UNIQUE
IF NOT EXISTS (SELECT 1 FROM [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS] WHERE [CONSTRAINT_NAME] = 'UQ_VIEWS_USER_UID' AND [TABLE_NAME] = N'VIEWS') BEGIN
    ALTER TABLE [VIEWS] ADD CONSTRAINT [UQ_VIEWS_USER_UID] UNIQUE([USER_UID])
    PRINT N'➕ UNIQUE KEY [UQ_VIEWS_USER_UID] WAS CREATED';
END;
IF NOT EXISTS (SELECT * FROM [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS] WHERE [CONSTRAINT_NAME] = 'UQ_VIEWS_VIDEO_UID' AND [TABLE_NAME] = N'VIEWS') BEGIN
    ALTER TABLE [VIEWS] ADD CONSTRAINT [UQ_VIEWS_VIDEO_UID] UNIQUE([VIDEO_UID])
    PRINT N'➕ UNIQUE KEY [UQ_VIEWS_VIDEO_UID] WAS CREATED';
END;


-- DEFAULT
IF NOT EXISTS (SELECT 1 FROM [SYS].[DEFAULT_CONSTRAINTS] WHERE [NAME] = 'DF_VIEWS_UID') BEGIN
	ALTER TABLE [VIEWS] ADD CONSTRAINT [DF_VIEWS_UID] DEFAULT (NEWID()) FOR [UID];
	PRINT N'➕ DEFAULT KEY [DF_VIEWS_UID] WAS CREATED';
END;
IF NOT EXISTS (SELECT 1 FROM [SYS].[DEFAULT_CONSTRAINTS] WHERE [NAME] = 'DF_VIEWS_CREATED_DT') BEGIN
    ALTER TABLE [VIEWS] ADD CONSTRAINT [DF_VIEWS_CREATED_DT] DEFAULT (GETDATE()) FOR [CREATED_DT];
    PRINT N'➕ DEFAULT KEY [DF_VIEWS_CREATED_DT] WAS CREATED';
END;

IF (@IS_COMMIT = 1) BEGIN
	COMMIT TRAN
	PRINT N'➕ INSERT IS COMMITTED'
END ELSE BEGIN
    ROLLBACK TRAN
	PRINT N'❌ INSERT IS ROLL-BACKED'
END;
