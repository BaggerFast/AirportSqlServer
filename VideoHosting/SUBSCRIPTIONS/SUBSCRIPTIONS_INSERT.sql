-------------------------------------------------------------------------------------------------
-- SUBSCRIPTIONS_INSERT
-------------------------------------------------------------------------------------------------
SET NOCOUNT ON;
SET ANSI_NULLS ON;
SET QUOTED_IDENTIFIER ON;
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;

DECLARE @IS_COMMIT BIT = 1;
-------------------------------------------------------------------------------------------------
USE VideoHosting;

BEGIN TRAN
PRINT N'➕ JOB IS STARTED';

-- CREATE VARIABLES
DECLARE @TO_USER NVARCHAR(32);
DECLARE @FROM_USER NVARCHAR(32);

DECLARE @TO_USER_UID UNIQUEIDENTIFIER;
DECLARE @FROM_USER_UID UNIQUEIDENTIFIER;

-- CREATE TMP TABLES
BEGIN 
    DROP TABLE IF EXISTS #CSV;
    CREATE TABLE #CSV (
        [FROM_USER] NVARCHAR(32) NOT NULL,
        [TO_USER] NVARCHAR(32) NOT NULL,
    );
    BULK INSERT #CSV FROM '/DataCsv/subscriptions.csv'
    WITH (
	    FIRSTROW = 2,
	    FIELDTERMINATOR = ';',
	    ROWTERMINATOR = '\n'
    );
    PRINT N'➕ CREATE TEMP TABLES IS SUCCESS'
END;

-- INSERT TABLE
BEGIN
    DECLARE CUR CURSOR FOR SELECT [FROM_USER], [TO_USER] FROM #CSV;
    OPEN CUR;
    FETCH NEXT FROM CUR INTO @FROM_USER, @TO_USER;
    WHILE @@FETCH_STATUS = 0 BEGIN
        SET @TO_USER_UID = (SELECT [UID] FROM [USERS] WHERE [USERNAME] = @TO_USER);
        SET @FROM_USER_UID = (SELECT [UID] FROM [USERS] WHERE [USERNAME] = @FROM_USER);
        PRINT @TO_USER;
        PRINT @FROM_USER;
        MERGE INTO [SUBSCRIPTIONS] AS [SUBS]
        USING (VALUES (@FROM_USER_UID, @TO_USER_UID)) AS [NEW_SUBS] ([FROM_USER_UID], [TO_USER_UID])
            ON ([SUBS].[TO_USER_UID] = [NEW_SUBS].[TO_USER_UID] AND [SUBS].[FROM_USER_UID] = [NEW_SUBS].[FROM_USER_UID])
            WHEN NOT MATCHED THEN
                INSERT ([FROM_USER_UID], [TO_USER_UID]) VALUES ([NEW_SUBS].[FROM_USER_UID], [NEW_SUBS].[TO_USER_UID]);
        FETCH NEXT FROM CUR INTO @FROM_USER, @TO_USER;
    END;
    CLOSE CUR;
    DEALLOCATE CUR;

    PRINT N'➕ INSERT IS SUCCESS'
END;

DROP TABLE IF EXISTS #CSV;
PRINT N'➕ DROP TEMP TABLES IS SUCCESS'

IF (@IS_COMMIT = 1) BEGIN
    COMMIT TRAN
    PRINT N'➕ INSERT IS COMMITTED'
END ELSE BEGIN
    ROLLBACK TRAN
    PRINT N'❌ JOB IS ROLL-BACKED'
END;
